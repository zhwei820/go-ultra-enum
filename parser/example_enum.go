// Code generated by go-ultra-enum; DO NOT EDIT.
package parser

type colorEnum struct {
	Red   colorEle
	Blue  colorEle
	Grenn colorEle
}

type colorEle struct {
	Name        string
	value       int
	Description string
}

func (x *colorEle) Val() int {
	return x.value
}

var (
	ColorEnum = colorEnum{
		Red:   colorEle{Name: "Red", value: 1, Description: ""},
		Blue:  colorEle{Name: "Blue", value: 2, Description: ""},
		Grenn: colorEle{Name: "Grenn", value: 3, Description: ""},
	}
)

type tradeResultEnum struct {
	Hedging    tradeResultEle
	WaitDeduct tradeResultEle
	Success    tradeResultEle
	Fail       tradeResultEle
}

type tradeResultEle struct {
	Name        string
	value       string
	Description string
}

func (x *tradeResultEle) Val() string {
	return x.value
}

var (
	TradeResultEnum = tradeResultEnum{
		Hedging:    tradeResultEle{Name: "Hedging", value: "hedging", Description: ""},
		WaitDeduct: tradeResultEle{Name: "WaitDeduct", value: "wait_deduct", Description: ""},
		Success:    tradeResultEle{Name: "Success", value: "success", Description: ""},
		Fail:       tradeResultEle{Name: "Fail", value: "fail", Description: ""},
	}
)

type countryEnum struct {
	China    countryEle
	America  countryEle
	Sinapore countryEle
}

type countryEle struct {
	Name        string
	value       int64
	Description string
}

func (x *countryEle) Val() int64 {
	return x.value
}

var (
	CountryEnum = countryEnum{
		China:    countryEle{Name: "China", value: 1, Description: ""},
		America:  countryEle{Name: "America", value: 2, Description: ""},
		Sinapore: countryEle{Name: "Sinapore", value: 3, Description: ""},
	}
)

type statusEnum struct {
	On  statusEle
	Off statusEle
}

type statusEle struct {
	Name        string
	value       bool
	Description string
}

func (x *statusEle) Val() bool {
	return x.value
}

var (
	StatusEnum = statusEnum{
		On:  statusEle{Name: "On", value: true, Description: ""},
		Off: statusEle{Name: "Off", value: false, Description: ""},
	}
)

type sushiEnum struct {
	Maki    sushiEle
	Temaki  sushiEle
	Sashimi sushiEle
}

type sushiEle struct {
	Name        string
	value       string
	Description string
}

func (x *sushiEle) Val() string {
	return x.value
}

var (
	SushiEnum = sushiEnum{
		Maki:    sushiEle{Name: "Maki", value: "MAKI", Description: "Rice and filling wrapped in seaweed"},
		Temaki:  sushiEle{Name: "Temaki", value: "TEMAKI", Description: "Hand rolled into a cone shape"},
		Sashimi: sushiEle{Name: "Sashimi", value: "SASHIMI", Description: "Fish or shellfish served alone without rice"},
	}
)
